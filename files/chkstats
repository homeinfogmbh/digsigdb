#! /usr/bin/env python3
"""chkstats.

    Checks statistics for the respective system.

Usage:
    chkstats <system> [options]

Options:
    --warning=<days>, -w    Warning time period in days [default: 5].
    --critical=<days>, -c   Critical time period in days [default: 9].
"""
from datetime import datetime, timedelta
from sys import stderr, exit    # pylint: disable=W0622

from docopt import docopt

from hwdb import System
from syslib import script

from digsigdb import Statistics


def parse_options(options):
    """Parses the options."""

    system = options['<system>']

    try:
        system = int(system)
    except ValueError:
        print('Invalid system ID: {}.'.format(system), file=stderr)
        exit(4)

    warning = options['--warning']

    try:
        warning = int(warning)
    except ValueError:
        print('Invalid amout of warning days: {}.'.format(warning),
              file=stderr)
        exit(5)
    else:
        warning = timedelta(days=warning)

    critical = options['--critical']

    try:
        critical = int(critical)
    except ValueError:
        print('Invalid amout of critical days: {}.'.format(critical),
              file=stderr)
        exit(6)
    else:
        critical = timedelta(days=critical)

    try:
        system = System[system]
    except System.DoesNotExist:
        print('No such system.', file=stderr)
        exit(7)

    if system.deployment is None:
        print('System is not deployed.', file=stderr)
        exit(8)

    return (system, warning, critical)


@script
def main(options):
    """Checks the system's stats."""

    system, warning, critical = parse_options(options)
    now = datetime.now()

    try:
        latest = Statistics.latest(system)
    except Statistics.DoesNotExist:
        print('Never.')
        exit(2)

    last = latest.timestamp
    print(last)

    if now - last <= warning:
        exit(0)     # ok
    elif now - last <= critical:
        exit(1)     # warning

    exit(2)     # critical


if __name__ == '__main__':
    main(docopt(__doc__))
